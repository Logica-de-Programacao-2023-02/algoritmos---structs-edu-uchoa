1.Crie uma struct chamada Circulo com o campo "raio".
Escreva uma função que receba um Circulo como parâmetro e calcule a área do círculo (área = pi * raio * raio).
Dica: use a constante math.Pi para representar o número pi

package main
import (
	"fmt"
	"math"
)
type Circulo struct {
	raio float64
}
func calcArea(c Circulo) float64 {
	area := math.Pi * c.raio * c.raio
	return area
}

2.Crie uma struct chamada Pessoa com os campos "nome", "idade" e "endereço
O campo "endereço" deve ser uma outra struct com os campos "rua", "número", "cidade" e "estado".
Escreva uma função que receba uma Pessoa como parâmetro e imprima seu endereço completo.

package main
import "fmt"
type Endereco struct {
	Rua     string
	Numero  int
	Cidade  string
	Estado  string
}
type Pessoa struct {
	Nome    string
	Idade   int
	Endereco Endereco
}
func imprimir(p Pessoa) {
	fmt.Printf("Endereço de %s:\n", p.Nome)
	fmt.Printf("Rua: %s, Número: %d\nCidade: %s, Estado: %s\n", p.Endereco.Rua, p.Endereco.Numero, p.Endereco.Cidade, p.Endereco.Estado)
}

3.Crie uma struct chamada Triângulo com os campos "base" e "altura".
Escreva uma função que receba um Triângulo como parâmetro e calcule a área do triângulo (área = base * altura / 2).

package main
import "fmt"
type Triangulo struct {
	Base   float64
	Altura float64
}
func calcArea(t Triangulo) float64 {
	area := (t.Base * t.Altura) / 2
	return area
}

4.Crie uma struct chamada Playlist com os campos "nome" e "músicas". O campo "músicas" deve ser um slice de structs, 
cada uma representando uma música com os campos "título", "artista" e "duração". Escreva uma função que receba uma
Playlist como parâmetro e imprima o nome da playlist, 
o tempo total da playlist e as informações de cada música.

package main
import "fmt"
type Musica struct {
	Titulo  string
	Artista string
	Duracao int // Duracao em segundos
}
type Playlist struct {
	Nome    string
	Musicas []Musica
}
func imprimirInfoPlaylist(p Playlist) {
	fmt.Printf("Playlist: %s\n", p.Nome)
	for i, musica := range p.Musicas {
		fmt.Printf("Música %d:\n", i+1)
		fmt.Printf("  Título: %s\n", musica.Titulo)
		fmt.Printf("  Artista: %s\n", musica.Artista)
		fmt.Printf("  Duração: %d segundos\n", musica.Duracao)
	}
	tempoTotal := calcularTempoTotal(p.Musicas)
	fmt.Printf("Tempo total da playlist: %d segundos\n", tempoTotal)
}
func calcularTempoTotal(musicas []Musica) int {
	var tempoTotal int
	for _, musica := range musicas {
		tempoTotal += musica.Duracao
	}
	return tempoTotal
}

5.
